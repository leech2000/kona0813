#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2620553608384758536) {
   out_2620553608384758536[0] = 0;
   out_2620553608384758536[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2620553608384758536[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2620553608384758536[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2620553608384758536[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2620553608384758536[5] = -sin(in_vec[1]);
   out_2620553608384758536[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2620553608384758536[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2620553608384758536[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2620553608384758536[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2620553608384758536[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2620553608384758536[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2620553608384758536[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2620553608384758536[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2620553608384758536[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2620553608384758536[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2620553608384758536[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2620553608384758536[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_1692580191345920575) {
   out_1692580191345920575[0] = delta_x[0] + nom_x[0];
   out_1692580191345920575[1] = delta_x[1] + nom_x[1];
   out_1692580191345920575[2] = delta_x[2] + nom_x[2];
   out_1692580191345920575[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_1692580191345920575[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_1692580191345920575[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_1692580191345920575[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_1692580191345920575[7] = delta_x[6] + nom_x[7];
   out_1692580191345920575[8] = delta_x[7] + nom_x[8];
   out_1692580191345920575[9] = delta_x[8] + nom_x[9];
   out_1692580191345920575[10] = delta_x[9] + nom_x[10];
   out_1692580191345920575[11] = delta_x[10] + nom_x[11];
   out_1692580191345920575[12] = delta_x[11] + nom_x[12];
   out_1692580191345920575[13] = delta_x[12] + nom_x[13];
   out_1692580191345920575[14] = delta_x[13] + nom_x[14];
   out_1692580191345920575[15] = delta_x[14] + nom_x[15];
   out_1692580191345920575[16] = delta_x[15] + nom_x[16];
   out_1692580191345920575[17] = delta_x[16] + nom_x[17];
   out_1692580191345920575[18] = delta_x[17] + nom_x[18];
   out_1692580191345920575[19] = delta_x[18] + nom_x[19];
   out_1692580191345920575[20] = delta_x[19] + nom_x[20];
   out_1692580191345920575[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2846535014035290138) {
   out_2846535014035290138[0] = -nom_x[0] + true_x[0];
   out_2846535014035290138[1] = -nom_x[1] + true_x[1];
   out_2846535014035290138[2] = -nom_x[2] + true_x[2];
   out_2846535014035290138[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2846535014035290138[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2846535014035290138[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2846535014035290138[6] = -nom_x[7] + true_x[7];
   out_2846535014035290138[7] = -nom_x[8] + true_x[8];
   out_2846535014035290138[8] = -nom_x[9] + true_x[9];
   out_2846535014035290138[9] = -nom_x[10] + true_x[10];
   out_2846535014035290138[10] = -nom_x[11] + true_x[11];
   out_2846535014035290138[11] = -nom_x[12] + true_x[12];
   out_2846535014035290138[12] = -nom_x[13] + true_x[13];
   out_2846535014035290138[13] = -nom_x[14] + true_x[14];
   out_2846535014035290138[14] = -nom_x[15] + true_x[15];
   out_2846535014035290138[15] = -nom_x[16] + true_x[16];
   out_2846535014035290138[16] = -nom_x[17] + true_x[17];
   out_2846535014035290138[17] = -nom_x[18] + true_x[18];
   out_2846535014035290138[18] = -nom_x[19] + true_x[19];
   out_2846535014035290138[19] = -nom_x[20] + true_x[20];
   out_2846535014035290138[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1037182408429431877) {
   out_1037182408429431877[0] = 1.0;
   out_1037182408429431877[1] = 0;
   out_1037182408429431877[2] = 0;
   out_1037182408429431877[3] = 0;
   out_1037182408429431877[4] = 0;
   out_1037182408429431877[5] = 0;
   out_1037182408429431877[6] = 0;
   out_1037182408429431877[7] = 0;
   out_1037182408429431877[8] = 0;
   out_1037182408429431877[9] = 0;
   out_1037182408429431877[10] = 0;
   out_1037182408429431877[11] = 0;
   out_1037182408429431877[12] = 0;
   out_1037182408429431877[13] = 0;
   out_1037182408429431877[14] = 0;
   out_1037182408429431877[15] = 0;
   out_1037182408429431877[16] = 0;
   out_1037182408429431877[17] = 0;
   out_1037182408429431877[18] = 0;
   out_1037182408429431877[19] = 0;
   out_1037182408429431877[20] = 0;
   out_1037182408429431877[21] = 0;
   out_1037182408429431877[22] = 1.0;
   out_1037182408429431877[23] = 0;
   out_1037182408429431877[24] = 0;
   out_1037182408429431877[25] = 0;
   out_1037182408429431877[26] = 0;
   out_1037182408429431877[27] = 0;
   out_1037182408429431877[28] = 0;
   out_1037182408429431877[29] = 0;
   out_1037182408429431877[30] = 0;
   out_1037182408429431877[31] = 0;
   out_1037182408429431877[32] = 0;
   out_1037182408429431877[33] = 0;
   out_1037182408429431877[34] = 0;
   out_1037182408429431877[35] = 0;
   out_1037182408429431877[36] = 0;
   out_1037182408429431877[37] = 0;
   out_1037182408429431877[38] = 0;
   out_1037182408429431877[39] = 0;
   out_1037182408429431877[40] = 0;
   out_1037182408429431877[41] = 0;
   out_1037182408429431877[42] = 0;
   out_1037182408429431877[43] = 0;
   out_1037182408429431877[44] = 1.0;
   out_1037182408429431877[45] = 0;
   out_1037182408429431877[46] = 0;
   out_1037182408429431877[47] = 0;
   out_1037182408429431877[48] = 0;
   out_1037182408429431877[49] = 0;
   out_1037182408429431877[50] = 0;
   out_1037182408429431877[51] = 0;
   out_1037182408429431877[52] = 0;
   out_1037182408429431877[53] = 0;
   out_1037182408429431877[54] = 0;
   out_1037182408429431877[55] = 0;
   out_1037182408429431877[56] = 0;
   out_1037182408429431877[57] = 0;
   out_1037182408429431877[58] = 0;
   out_1037182408429431877[59] = 0;
   out_1037182408429431877[60] = 0;
   out_1037182408429431877[61] = 0;
   out_1037182408429431877[62] = 0;
   out_1037182408429431877[63] = 0;
   out_1037182408429431877[64] = 0;
   out_1037182408429431877[65] = 0;
   out_1037182408429431877[66] = -0.5*state[4];
   out_1037182408429431877[67] = -0.5*state[5];
   out_1037182408429431877[68] = -0.5*state[6];
   out_1037182408429431877[69] = 0;
   out_1037182408429431877[70] = 0;
   out_1037182408429431877[71] = 0;
   out_1037182408429431877[72] = 0;
   out_1037182408429431877[73] = 0;
   out_1037182408429431877[74] = 0;
   out_1037182408429431877[75] = 0;
   out_1037182408429431877[76] = 0;
   out_1037182408429431877[77] = 0;
   out_1037182408429431877[78] = 0;
   out_1037182408429431877[79] = 0;
   out_1037182408429431877[80] = 0;
   out_1037182408429431877[81] = 0;
   out_1037182408429431877[82] = 0;
   out_1037182408429431877[83] = 0;
   out_1037182408429431877[84] = 0;
   out_1037182408429431877[85] = 0;
   out_1037182408429431877[86] = 0;
   out_1037182408429431877[87] = 0.5*state[3];
   out_1037182408429431877[88] = 0.5*state[6];
   out_1037182408429431877[89] = -0.5*state[5];
   out_1037182408429431877[90] = 0;
   out_1037182408429431877[91] = 0;
   out_1037182408429431877[92] = 0;
   out_1037182408429431877[93] = 0;
   out_1037182408429431877[94] = 0;
   out_1037182408429431877[95] = 0;
   out_1037182408429431877[96] = 0;
   out_1037182408429431877[97] = 0;
   out_1037182408429431877[98] = 0;
   out_1037182408429431877[99] = 0;
   out_1037182408429431877[100] = 0;
   out_1037182408429431877[101] = 0;
   out_1037182408429431877[102] = 0;
   out_1037182408429431877[103] = 0;
   out_1037182408429431877[104] = 0;
   out_1037182408429431877[105] = 0;
   out_1037182408429431877[106] = 0;
   out_1037182408429431877[107] = 0;
   out_1037182408429431877[108] = -0.5*state[6];
   out_1037182408429431877[109] = 0.5*state[3];
   out_1037182408429431877[110] = 0.5*state[4];
   out_1037182408429431877[111] = 0;
   out_1037182408429431877[112] = 0;
   out_1037182408429431877[113] = 0;
   out_1037182408429431877[114] = 0;
   out_1037182408429431877[115] = 0;
   out_1037182408429431877[116] = 0;
   out_1037182408429431877[117] = 0;
   out_1037182408429431877[118] = 0;
   out_1037182408429431877[119] = 0;
   out_1037182408429431877[120] = 0;
   out_1037182408429431877[121] = 0;
   out_1037182408429431877[122] = 0;
   out_1037182408429431877[123] = 0;
   out_1037182408429431877[124] = 0;
   out_1037182408429431877[125] = 0;
   out_1037182408429431877[126] = 0;
   out_1037182408429431877[127] = 0;
   out_1037182408429431877[128] = 0;
   out_1037182408429431877[129] = 0.5*state[5];
   out_1037182408429431877[130] = -0.5*state[4];
   out_1037182408429431877[131] = 0.5*state[3];
   out_1037182408429431877[132] = 0;
   out_1037182408429431877[133] = 0;
   out_1037182408429431877[134] = 0;
   out_1037182408429431877[135] = 0;
   out_1037182408429431877[136] = 0;
   out_1037182408429431877[137] = 0;
   out_1037182408429431877[138] = 0;
   out_1037182408429431877[139] = 0;
   out_1037182408429431877[140] = 0;
   out_1037182408429431877[141] = 0;
   out_1037182408429431877[142] = 0;
   out_1037182408429431877[143] = 0;
   out_1037182408429431877[144] = 0;
   out_1037182408429431877[145] = 0;
   out_1037182408429431877[146] = 0;
   out_1037182408429431877[147] = 0;
   out_1037182408429431877[148] = 0;
   out_1037182408429431877[149] = 0;
   out_1037182408429431877[150] = 0;
   out_1037182408429431877[151] = 0;
   out_1037182408429431877[152] = 0;
   out_1037182408429431877[153] = 1.0;
   out_1037182408429431877[154] = 0;
   out_1037182408429431877[155] = 0;
   out_1037182408429431877[156] = 0;
   out_1037182408429431877[157] = 0;
   out_1037182408429431877[158] = 0;
   out_1037182408429431877[159] = 0;
   out_1037182408429431877[160] = 0;
   out_1037182408429431877[161] = 0;
   out_1037182408429431877[162] = 0;
   out_1037182408429431877[163] = 0;
   out_1037182408429431877[164] = 0;
   out_1037182408429431877[165] = 0;
   out_1037182408429431877[166] = 0;
   out_1037182408429431877[167] = 0;
   out_1037182408429431877[168] = 0;
   out_1037182408429431877[169] = 0;
   out_1037182408429431877[170] = 0;
   out_1037182408429431877[171] = 0;
   out_1037182408429431877[172] = 0;
   out_1037182408429431877[173] = 0;
   out_1037182408429431877[174] = 0;
   out_1037182408429431877[175] = 1.0;
   out_1037182408429431877[176] = 0;
   out_1037182408429431877[177] = 0;
   out_1037182408429431877[178] = 0;
   out_1037182408429431877[179] = 0;
   out_1037182408429431877[180] = 0;
   out_1037182408429431877[181] = 0;
   out_1037182408429431877[182] = 0;
   out_1037182408429431877[183] = 0;
   out_1037182408429431877[184] = 0;
   out_1037182408429431877[185] = 0;
   out_1037182408429431877[186] = 0;
   out_1037182408429431877[187] = 0;
   out_1037182408429431877[188] = 0;
   out_1037182408429431877[189] = 0;
   out_1037182408429431877[190] = 0;
   out_1037182408429431877[191] = 0;
   out_1037182408429431877[192] = 0;
   out_1037182408429431877[193] = 0;
   out_1037182408429431877[194] = 0;
   out_1037182408429431877[195] = 0;
   out_1037182408429431877[196] = 0;
   out_1037182408429431877[197] = 1.0;
   out_1037182408429431877[198] = 0;
   out_1037182408429431877[199] = 0;
   out_1037182408429431877[200] = 0;
   out_1037182408429431877[201] = 0;
   out_1037182408429431877[202] = 0;
   out_1037182408429431877[203] = 0;
   out_1037182408429431877[204] = 0;
   out_1037182408429431877[205] = 0;
   out_1037182408429431877[206] = 0;
   out_1037182408429431877[207] = 0;
   out_1037182408429431877[208] = 0;
   out_1037182408429431877[209] = 0;
   out_1037182408429431877[210] = 0;
   out_1037182408429431877[211] = 0;
   out_1037182408429431877[212] = 0;
   out_1037182408429431877[213] = 0;
   out_1037182408429431877[214] = 0;
   out_1037182408429431877[215] = 0;
   out_1037182408429431877[216] = 0;
   out_1037182408429431877[217] = 0;
   out_1037182408429431877[218] = 0;
   out_1037182408429431877[219] = 1.0;
   out_1037182408429431877[220] = 0;
   out_1037182408429431877[221] = 0;
   out_1037182408429431877[222] = 0;
   out_1037182408429431877[223] = 0;
   out_1037182408429431877[224] = 0;
   out_1037182408429431877[225] = 0;
   out_1037182408429431877[226] = 0;
   out_1037182408429431877[227] = 0;
   out_1037182408429431877[228] = 0;
   out_1037182408429431877[229] = 0;
   out_1037182408429431877[230] = 0;
   out_1037182408429431877[231] = 0;
   out_1037182408429431877[232] = 0;
   out_1037182408429431877[233] = 0;
   out_1037182408429431877[234] = 0;
   out_1037182408429431877[235] = 0;
   out_1037182408429431877[236] = 0;
   out_1037182408429431877[237] = 0;
   out_1037182408429431877[238] = 0;
   out_1037182408429431877[239] = 0;
   out_1037182408429431877[240] = 0;
   out_1037182408429431877[241] = 1.0;
   out_1037182408429431877[242] = 0;
   out_1037182408429431877[243] = 0;
   out_1037182408429431877[244] = 0;
   out_1037182408429431877[245] = 0;
   out_1037182408429431877[246] = 0;
   out_1037182408429431877[247] = 0;
   out_1037182408429431877[248] = 0;
   out_1037182408429431877[249] = 0;
   out_1037182408429431877[250] = 0;
   out_1037182408429431877[251] = 0;
   out_1037182408429431877[252] = 0;
   out_1037182408429431877[253] = 0;
   out_1037182408429431877[254] = 0;
   out_1037182408429431877[255] = 0;
   out_1037182408429431877[256] = 0;
   out_1037182408429431877[257] = 0;
   out_1037182408429431877[258] = 0;
   out_1037182408429431877[259] = 0;
   out_1037182408429431877[260] = 0;
   out_1037182408429431877[261] = 0;
   out_1037182408429431877[262] = 0;
   out_1037182408429431877[263] = 1.0;
   out_1037182408429431877[264] = 0;
   out_1037182408429431877[265] = 0;
   out_1037182408429431877[266] = 0;
   out_1037182408429431877[267] = 0;
   out_1037182408429431877[268] = 0;
   out_1037182408429431877[269] = 0;
   out_1037182408429431877[270] = 0;
   out_1037182408429431877[271] = 0;
   out_1037182408429431877[272] = 0;
   out_1037182408429431877[273] = 0;
   out_1037182408429431877[274] = 0;
   out_1037182408429431877[275] = 0;
   out_1037182408429431877[276] = 0;
   out_1037182408429431877[277] = 0;
   out_1037182408429431877[278] = 0;
   out_1037182408429431877[279] = 0;
   out_1037182408429431877[280] = 0;
   out_1037182408429431877[281] = 0;
   out_1037182408429431877[282] = 0;
   out_1037182408429431877[283] = 0;
   out_1037182408429431877[284] = 0;
   out_1037182408429431877[285] = 1.0;
   out_1037182408429431877[286] = 0;
   out_1037182408429431877[287] = 0;
   out_1037182408429431877[288] = 0;
   out_1037182408429431877[289] = 0;
   out_1037182408429431877[290] = 0;
   out_1037182408429431877[291] = 0;
   out_1037182408429431877[292] = 0;
   out_1037182408429431877[293] = 0;
   out_1037182408429431877[294] = 0;
   out_1037182408429431877[295] = 0;
   out_1037182408429431877[296] = 0;
   out_1037182408429431877[297] = 0;
   out_1037182408429431877[298] = 0;
   out_1037182408429431877[299] = 0;
   out_1037182408429431877[300] = 0;
   out_1037182408429431877[301] = 0;
   out_1037182408429431877[302] = 0;
   out_1037182408429431877[303] = 0;
   out_1037182408429431877[304] = 0;
   out_1037182408429431877[305] = 0;
   out_1037182408429431877[306] = 0;
   out_1037182408429431877[307] = 1.0;
   out_1037182408429431877[308] = 0;
   out_1037182408429431877[309] = 0;
   out_1037182408429431877[310] = 0;
   out_1037182408429431877[311] = 0;
   out_1037182408429431877[312] = 0;
   out_1037182408429431877[313] = 0;
   out_1037182408429431877[314] = 0;
   out_1037182408429431877[315] = 0;
   out_1037182408429431877[316] = 0;
   out_1037182408429431877[317] = 0;
   out_1037182408429431877[318] = 0;
   out_1037182408429431877[319] = 0;
   out_1037182408429431877[320] = 0;
   out_1037182408429431877[321] = 0;
   out_1037182408429431877[322] = 0;
   out_1037182408429431877[323] = 0;
   out_1037182408429431877[324] = 0;
   out_1037182408429431877[325] = 0;
   out_1037182408429431877[326] = 0;
   out_1037182408429431877[327] = 0;
   out_1037182408429431877[328] = 0;
   out_1037182408429431877[329] = 1.0;
   out_1037182408429431877[330] = 0;
   out_1037182408429431877[331] = 0;
   out_1037182408429431877[332] = 0;
   out_1037182408429431877[333] = 0;
   out_1037182408429431877[334] = 0;
   out_1037182408429431877[335] = 0;
   out_1037182408429431877[336] = 0;
   out_1037182408429431877[337] = 0;
   out_1037182408429431877[338] = 0;
   out_1037182408429431877[339] = 0;
   out_1037182408429431877[340] = 0;
   out_1037182408429431877[341] = 0;
   out_1037182408429431877[342] = 0;
   out_1037182408429431877[343] = 0;
   out_1037182408429431877[344] = 0;
   out_1037182408429431877[345] = 0;
   out_1037182408429431877[346] = 0;
   out_1037182408429431877[347] = 0;
   out_1037182408429431877[348] = 0;
   out_1037182408429431877[349] = 0;
   out_1037182408429431877[350] = 0;
   out_1037182408429431877[351] = 1.0;
   out_1037182408429431877[352] = 0;
   out_1037182408429431877[353] = 0;
   out_1037182408429431877[354] = 0;
   out_1037182408429431877[355] = 0;
   out_1037182408429431877[356] = 0;
   out_1037182408429431877[357] = 0;
   out_1037182408429431877[358] = 0;
   out_1037182408429431877[359] = 0;
   out_1037182408429431877[360] = 0;
   out_1037182408429431877[361] = 0;
   out_1037182408429431877[362] = 0;
   out_1037182408429431877[363] = 0;
   out_1037182408429431877[364] = 0;
   out_1037182408429431877[365] = 0;
   out_1037182408429431877[366] = 0;
   out_1037182408429431877[367] = 0;
   out_1037182408429431877[368] = 0;
   out_1037182408429431877[369] = 0;
   out_1037182408429431877[370] = 0;
   out_1037182408429431877[371] = 0;
   out_1037182408429431877[372] = 0;
   out_1037182408429431877[373] = 1.0;
   out_1037182408429431877[374] = 0;
   out_1037182408429431877[375] = 0;
   out_1037182408429431877[376] = 0;
   out_1037182408429431877[377] = 0;
   out_1037182408429431877[378] = 0;
   out_1037182408429431877[379] = 0;
   out_1037182408429431877[380] = 0;
   out_1037182408429431877[381] = 0;
   out_1037182408429431877[382] = 0;
   out_1037182408429431877[383] = 0;
   out_1037182408429431877[384] = 0;
   out_1037182408429431877[385] = 0;
   out_1037182408429431877[386] = 0;
   out_1037182408429431877[387] = 0;
   out_1037182408429431877[388] = 0;
   out_1037182408429431877[389] = 0;
   out_1037182408429431877[390] = 0;
   out_1037182408429431877[391] = 0;
   out_1037182408429431877[392] = 0;
   out_1037182408429431877[393] = 0;
   out_1037182408429431877[394] = 0;
   out_1037182408429431877[395] = 1.0;
   out_1037182408429431877[396] = 0;
   out_1037182408429431877[397] = 0;
   out_1037182408429431877[398] = 0;
   out_1037182408429431877[399] = 0;
   out_1037182408429431877[400] = 0;
   out_1037182408429431877[401] = 0;
   out_1037182408429431877[402] = 0;
   out_1037182408429431877[403] = 0;
   out_1037182408429431877[404] = 0;
   out_1037182408429431877[405] = 0;
   out_1037182408429431877[406] = 0;
   out_1037182408429431877[407] = 0;
   out_1037182408429431877[408] = 0;
   out_1037182408429431877[409] = 0;
   out_1037182408429431877[410] = 0;
   out_1037182408429431877[411] = 0;
   out_1037182408429431877[412] = 0;
   out_1037182408429431877[413] = 0;
   out_1037182408429431877[414] = 0;
   out_1037182408429431877[415] = 0;
   out_1037182408429431877[416] = 0;
   out_1037182408429431877[417] = 1.0;
   out_1037182408429431877[418] = 0;
   out_1037182408429431877[419] = 0;
   out_1037182408429431877[420] = 0;
   out_1037182408429431877[421] = 0;
   out_1037182408429431877[422] = 0;
   out_1037182408429431877[423] = 0;
   out_1037182408429431877[424] = 0;
   out_1037182408429431877[425] = 0;
   out_1037182408429431877[426] = 0;
   out_1037182408429431877[427] = 0;
   out_1037182408429431877[428] = 0;
   out_1037182408429431877[429] = 0;
   out_1037182408429431877[430] = 0;
   out_1037182408429431877[431] = 0;
   out_1037182408429431877[432] = 0;
   out_1037182408429431877[433] = 0;
   out_1037182408429431877[434] = 0;
   out_1037182408429431877[435] = 0;
   out_1037182408429431877[436] = 0;
   out_1037182408429431877[437] = 0;
   out_1037182408429431877[438] = 0;
   out_1037182408429431877[439] = 1.0;
   out_1037182408429431877[440] = 0;
   out_1037182408429431877[441] = 0;
   out_1037182408429431877[442] = 0;
   out_1037182408429431877[443] = 0;
   out_1037182408429431877[444] = 0;
   out_1037182408429431877[445] = 0;
   out_1037182408429431877[446] = 0;
   out_1037182408429431877[447] = 0;
   out_1037182408429431877[448] = 0;
   out_1037182408429431877[449] = 0;
   out_1037182408429431877[450] = 0;
   out_1037182408429431877[451] = 0;
   out_1037182408429431877[452] = 0;
   out_1037182408429431877[453] = 0;
   out_1037182408429431877[454] = 0;
   out_1037182408429431877[455] = 0;
   out_1037182408429431877[456] = 0;
   out_1037182408429431877[457] = 0;
   out_1037182408429431877[458] = 0;
   out_1037182408429431877[459] = 0;
   out_1037182408429431877[460] = 0;
   out_1037182408429431877[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2137560961494755797) {
   out_2137560961494755797[0] = dt*state[7] + state[0];
   out_2137560961494755797[1] = dt*state[8] + state[1];
   out_2137560961494755797[2] = dt*state[9] + state[2];
   out_2137560961494755797[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2137560961494755797[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2137560961494755797[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2137560961494755797[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2137560961494755797[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2137560961494755797[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2137560961494755797[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2137560961494755797[10] = state[10];
   out_2137560961494755797[11] = state[11];
   out_2137560961494755797[12] = state[12];
   out_2137560961494755797[13] = state[13];
   out_2137560961494755797[14] = state[14];
   out_2137560961494755797[15] = state[15];
   out_2137560961494755797[16] = state[16];
   out_2137560961494755797[17] = state[17];
   out_2137560961494755797[18] = state[18];
   out_2137560961494755797[19] = state[19];
   out_2137560961494755797[20] = state[20];
   out_2137560961494755797[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6574839878510731598) {
   out_6574839878510731598[0] = 1;
   out_6574839878510731598[1] = 0;
   out_6574839878510731598[2] = 0;
   out_6574839878510731598[3] = 0;
   out_6574839878510731598[4] = 0;
   out_6574839878510731598[5] = 0;
   out_6574839878510731598[6] = dt;
   out_6574839878510731598[7] = 0;
   out_6574839878510731598[8] = 0;
   out_6574839878510731598[9] = 0;
   out_6574839878510731598[10] = 0;
   out_6574839878510731598[11] = 0;
   out_6574839878510731598[12] = 0;
   out_6574839878510731598[13] = 0;
   out_6574839878510731598[14] = 0;
   out_6574839878510731598[15] = 0;
   out_6574839878510731598[16] = 0;
   out_6574839878510731598[17] = 0;
   out_6574839878510731598[18] = 0;
   out_6574839878510731598[19] = 0;
   out_6574839878510731598[20] = 0;
   out_6574839878510731598[21] = 0;
   out_6574839878510731598[22] = 1;
   out_6574839878510731598[23] = 0;
   out_6574839878510731598[24] = 0;
   out_6574839878510731598[25] = 0;
   out_6574839878510731598[26] = 0;
   out_6574839878510731598[27] = 0;
   out_6574839878510731598[28] = dt;
   out_6574839878510731598[29] = 0;
   out_6574839878510731598[30] = 0;
   out_6574839878510731598[31] = 0;
   out_6574839878510731598[32] = 0;
   out_6574839878510731598[33] = 0;
   out_6574839878510731598[34] = 0;
   out_6574839878510731598[35] = 0;
   out_6574839878510731598[36] = 0;
   out_6574839878510731598[37] = 0;
   out_6574839878510731598[38] = 0;
   out_6574839878510731598[39] = 0;
   out_6574839878510731598[40] = 0;
   out_6574839878510731598[41] = 0;
   out_6574839878510731598[42] = 0;
   out_6574839878510731598[43] = 0;
   out_6574839878510731598[44] = 1;
   out_6574839878510731598[45] = 0;
   out_6574839878510731598[46] = 0;
   out_6574839878510731598[47] = 0;
   out_6574839878510731598[48] = 0;
   out_6574839878510731598[49] = 0;
   out_6574839878510731598[50] = dt;
   out_6574839878510731598[51] = 0;
   out_6574839878510731598[52] = 0;
   out_6574839878510731598[53] = 0;
   out_6574839878510731598[54] = 0;
   out_6574839878510731598[55] = 0;
   out_6574839878510731598[56] = 0;
   out_6574839878510731598[57] = 0;
   out_6574839878510731598[58] = 0;
   out_6574839878510731598[59] = 0;
   out_6574839878510731598[60] = 0;
   out_6574839878510731598[61] = 0;
   out_6574839878510731598[62] = 0;
   out_6574839878510731598[63] = 0;
   out_6574839878510731598[64] = 0;
   out_6574839878510731598[65] = 0;
   out_6574839878510731598[66] = 1;
   out_6574839878510731598[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6574839878510731598[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6574839878510731598[69] = 0;
   out_6574839878510731598[70] = 0;
   out_6574839878510731598[71] = 0;
   out_6574839878510731598[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6574839878510731598[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6574839878510731598[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6574839878510731598[75] = 0;
   out_6574839878510731598[76] = 0;
   out_6574839878510731598[77] = 0;
   out_6574839878510731598[78] = 0;
   out_6574839878510731598[79] = 0;
   out_6574839878510731598[80] = 0;
   out_6574839878510731598[81] = 0;
   out_6574839878510731598[82] = 0;
   out_6574839878510731598[83] = 0;
   out_6574839878510731598[84] = 0;
   out_6574839878510731598[85] = 0;
   out_6574839878510731598[86] = 0;
   out_6574839878510731598[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6574839878510731598[88] = 1;
   out_6574839878510731598[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6574839878510731598[90] = 0;
   out_6574839878510731598[91] = 0;
   out_6574839878510731598[92] = 0;
   out_6574839878510731598[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6574839878510731598[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6574839878510731598[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6574839878510731598[96] = 0;
   out_6574839878510731598[97] = 0;
   out_6574839878510731598[98] = 0;
   out_6574839878510731598[99] = 0;
   out_6574839878510731598[100] = 0;
   out_6574839878510731598[101] = 0;
   out_6574839878510731598[102] = 0;
   out_6574839878510731598[103] = 0;
   out_6574839878510731598[104] = 0;
   out_6574839878510731598[105] = 0;
   out_6574839878510731598[106] = 0;
   out_6574839878510731598[107] = 0;
   out_6574839878510731598[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6574839878510731598[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6574839878510731598[110] = 1;
   out_6574839878510731598[111] = 0;
   out_6574839878510731598[112] = 0;
   out_6574839878510731598[113] = 0;
   out_6574839878510731598[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6574839878510731598[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6574839878510731598[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6574839878510731598[117] = 0;
   out_6574839878510731598[118] = 0;
   out_6574839878510731598[119] = 0;
   out_6574839878510731598[120] = 0;
   out_6574839878510731598[121] = 0;
   out_6574839878510731598[122] = 0;
   out_6574839878510731598[123] = 0;
   out_6574839878510731598[124] = 0;
   out_6574839878510731598[125] = 0;
   out_6574839878510731598[126] = 0;
   out_6574839878510731598[127] = 0;
   out_6574839878510731598[128] = 0;
   out_6574839878510731598[129] = 0;
   out_6574839878510731598[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6574839878510731598[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6574839878510731598[132] = 1;
   out_6574839878510731598[133] = 0;
   out_6574839878510731598[134] = 0;
   out_6574839878510731598[135] = 0;
   out_6574839878510731598[136] = 0;
   out_6574839878510731598[137] = 0;
   out_6574839878510731598[138] = 0;
   out_6574839878510731598[139] = 0;
   out_6574839878510731598[140] = 0;
   out_6574839878510731598[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6574839878510731598[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6574839878510731598[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6574839878510731598[144] = 0;
   out_6574839878510731598[145] = 0;
   out_6574839878510731598[146] = 0;
   out_6574839878510731598[147] = 0;
   out_6574839878510731598[148] = 0;
   out_6574839878510731598[149] = 0;
   out_6574839878510731598[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6574839878510731598[151] = 0;
   out_6574839878510731598[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6574839878510731598[153] = 0;
   out_6574839878510731598[154] = 1;
   out_6574839878510731598[155] = 0;
   out_6574839878510731598[156] = 0;
   out_6574839878510731598[157] = 0;
   out_6574839878510731598[158] = 0;
   out_6574839878510731598[159] = 0;
   out_6574839878510731598[160] = 0;
   out_6574839878510731598[161] = 0;
   out_6574839878510731598[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6574839878510731598[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6574839878510731598[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6574839878510731598[165] = 0;
   out_6574839878510731598[166] = 0;
   out_6574839878510731598[167] = 0;
   out_6574839878510731598[168] = 0;
   out_6574839878510731598[169] = 0;
   out_6574839878510731598[170] = 0;
   out_6574839878510731598[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6574839878510731598[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6574839878510731598[173] = 0;
   out_6574839878510731598[174] = 0;
   out_6574839878510731598[175] = 0;
   out_6574839878510731598[176] = 1;
   out_6574839878510731598[177] = 0;
   out_6574839878510731598[178] = 0;
   out_6574839878510731598[179] = 0;
   out_6574839878510731598[180] = 0;
   out_6574839878510731598[181] = 0;
   out_6574839878510731598[182] = 0;
   out_6574839878510731598[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6574839878510731598[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6574839878510731598[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6574839878510731598[186] = 0;
   out_6574839878510731598[187] = 0;
   out_6574839878510731598[188] = 0;
   out_6574839878510731598[189] = 0;
   out_6574839878510731598[190] = 0;
   out_6574839878510731598[191] = 0;
   out_6574839878510731598[192] = 0;
   out_6574839878510731598[193] = 0;
   out_6574839878510731598[194] = 0;
   out_6574839878510731598[195] = 0;
   out_6574839878510731598[196] = 0;
   out_6574839878510731598[197] = 0;
   out_6574839878510731598[198] = 1;
   out_6574839878510731598[199] = 0;
   out_6574839878510731598[200] = 0;
   out_6574839878510731598[201] = 0;
   out_6574839878510731598[202] = 0;
   out_6574839878510731598[203] = 0;
   out_6574839878510731598[204] = 0;
   out_6574839878510731598[205] = 0;
   out_6574839878510731598[206] = 0;
   out_6574839878510731598[207] = 0;
   out_6574839878510731598[208] = 0;
   out_6574839878510731598[209] = 0;
   out_6574839878510731598[210] = 0;
   out_6574839878510731598[211] = 0;
   out_6574839878510731598[212] = 0;
   out_6574839878510731598[213] = 0;
   out_6574839878510731598[214] = 0;
   out_6574839878510731598[215] = 0;
   out_6574839878510731598[216] = 0;
   out_6574839878510731598[217] = 0;
   out_6574839878510731598[218] = 0;
   out_6574839878510731598[219] = 0;
   out_6574839878510731598[220] = 1;
   out_6574839878510731598[221] = 0;
   out_6574839878510731598[222] = 0;
   out_6574839878510731598[223] = 0;
   out_6574839878510731598[224] = 0;
   out_6574839878510731598[225] = 0;
   out_6574839878510731598[226] = 0;
   out_6574839878510731598[227] = 0;
   out_6574839878510731598[228] = 0;
   out_6574839878510731598[229] = 0;
   out_6574839878510731598[230] = 0;
   out_6574839878510731598[231] = 0;
   out_6574839878510731598[232] = 0;
   out_6574839878510731598[233] = 0;
   out_6574839878510731598[234] = 0;
   out_6574839878510731598[235] = 0;
   out_6574839878510731598[236] = 0;
   out_6574839878510731598[237] = 0;
   out_6574839878510731598[238] = 0;
   out_6574839878510731598[239] = 0;
   out_6574839878510731598[240] = 0;
   out_6574839878510731598[241] = 0;
   out_6574839878510731598[242] = 1;
   out_6574839878510731598[243] = 0;
   out_6574839878510731598[244] = 0;
   out_6574839878510731598[245] = 0;
   out_6574839878510731598[246] = 0;
   out_6574839878510731598[247] = 0;
   out_6574839878510731598[248] = 0;
   out_6574839878510731598[249] = 0;
   out_6574839878510731598[250] = 0;
   out_6574839878510731598[251] = 0;
   out_6574839878510731598[252] = 0;
   out_6574839878510731598[253] = 0;
   out_6574839878510731598[254] = 0;
   out_6574839878510731598[255] = 0;
   out_6574839878510731598[256] = 0;
   out_6574839878510731598[257] = 0;
   out_6574839878510731598[258] = 0;
   out_6574839878510731598[259] = 0;
   out_6574839878510731598[260] = 0;
   out_6574839878510731598[261] = 0;
   out_6574839878510731598[262] = 0;
   out_6574839878510731598[263] = 0;
   out_6574839878510731598[264] = 1;
   out_6574839878510731598[265] = 0;
   out_6574839878510731598[266] = 0;
   out_6574839878510731598[267] = 0;
   out_6574839878510731598[268] = 0;
   out_6574839878510731598[269] = 0;
   out_6574839878510731598[270] = 0;
   out_6574839878510731598[271] = 0;
   out_6574839878510731598[272] = 0;
   out_6574839878510731598[273] = 0;
   out_6574839878510731598[274] = 0;
   out_6574839878510731598[275] = 0;
   out_6574839878510731598[276] = 0;
   out_6574839878510731598[277] = 0;
   out_6574839878510731598[278] = 0;
   out_6574839878510731598[279] = 0;
   out_6574839878510731598[280] = 0;
   out_6574839878510731598[281] = 0;
   out_6574839878510731598[282] = 0;
   out_6574839878510731598[283] = 0;
   out_6574839878510731598[284] = 0;
   out_6574839878510731598[285] = 0;
   out_6574839878510731598[286] = 1;
   out_6574839878510731598[287] = 0;
   out_6574839878510731598[288] = 0;
   out_6574839878510731598[289] = 0;
   out_6574839878510731598[290] = 0;
   out_6574839878510731598[291] = 0;
   out_6574839878510731598[292] = 0;
   out_6574839878510731598[293] = 0;
   out_6574839878510731598[294] = 0;
   out_6574839878510731598[295] = 0;
   out_6574839878510731598[296] = 0;
   out_6574839878510731598[297] = 0;
   out_6574839878510731598[298] = 0;
   out_6574839878510731598[299] = 0;
   out_6574839878510731598[300] = 0;
   out_6574839878510731598[301] = 0;
   out_6574839878510731598[302] = 0;
   out_6574839878510731598[303] = 0;
   out_6574839878510731598[304] = 0;
   out_6574839878510731598[305] = 0;
   out_6574839878510731598[306] = 0;
   out_6574839878510731598[307] = 0;
   out_6574839878510731598[308] = 1;
   out_6574839878510731598[309] = 0;
   out_6574839878510731598[310] = 0;
   out_6574839878510731598[311] = 0;
   out_6574839878510731598[312] = 0;
   out_6574839878510731598[313] = 0;
   out_6574839878510731598[314] = 0;
   out_6574839878510731598[315] = 0;
   out_6574839878510731598[316] = 0;
   out_6574839878510731598[317] = 0;
   out_6574839878510731598[318] = 0;
   out_6574839878510731598[319] = 0;
   out_6574839878510731598[320] = 0;
   out_6574839878510731598[321] = 0;
   out_6574839878510731598[322] = 0;
   out_6574839878510731598[323] = 0;
   out_6574839878510731598[324] = 0;
   out_6574839878510731598[325] = 0;
   out_6574839878510731598[326] = 0;
   out_6574839878510731598[327] = 0;
   out_6574839878510731598[328] = 0;
   out_6574839878510731598[329] = 0;
   out_6574839878510731598[330] = 1;
   out_6574839878510731598[331] = 0;
   out_6574839878510731598[332] = 0;
   out_6574839878510731598[333] = 0;
   out_6574839878510731598[334] = 0;
   out_6574839878510731598[335] = 0;
   out_6574839878510731598[336] = 0;
   out_6574839878510731598[337] = 0;
   out_6574839878510731598[338] = 0;
   out_6574839878510731598[339] = 0;
   out_6574839878510731598[340] = 0;
   out_6574839878510731598[341] = 0;
   out_6574839878510731598[342] = 0;
   out_6574839878510731598[343] = 0;
   out_6574839878510731598[344] = 0;
   out_6574839878510731598[345] = 0;
   out_6574839878510731598[346] = 0;
   out_6574839878510731598[347] = 0;
   out_6574839878510731598[348] = 0;
   out_6574839878510731598[349] = 0;
   out_6574839878510731598[350] = 0;
   out_6574839878510731598[351] = 0;
   out_6574839878510731598[352] = 1;
   out_6574839878510731598[353] = 0;
   out_6574839878510731598[354] = 0;
   out_6574839878510731598[355] = 0;
   out_6574839878510731598[356] = 0;
   out_6574839878510731598[357] = 0;
   out_6574839878510731598[358] = 0;
   out_6574839878510731598[359] = 0;
   out_6574839878510731598[360] = 0;
   out_6574839878510731598[361] = 0;
   out_6574839878510731598[362] = 0;
   out_6574839878510731598[363] = 0;
   out_6574839878510731598[364] = 0;
   out_6574839878510731598[365] = 0;
   out_6574839878510731598[366] = 0;
   out_6574839878510731598[367] = 0;
   out_6574839878510731598[368] = 0;
   out_6574839878510731598[369] = 0;
   out_6574839878510731598[370] = 0;
   out_6574839878510731598[371] = 0;
   out_6574839878510731598[372] = 0;
   out_6574839878510731598[373] = 0;
   out_6574839878510731598[374] = 1;
   out_6574839878510731598[375] = 0;
   out_6574839878510731598[376] = 0;
   out_6574839878510731598[377] = 0;
   out_6574839878510731598[378] = 0;
   out_6574839878510731598[379] = 0;
   out_6574839878510731598[380] = 0;
   out_6574839878510731598[381] = 0;
   out_6574839878510731598[382] = 0;
   out_6574839878510731598[383] = 0;
   out_6574839878510731598[384] = 0;
   out_6574839878510731598[385] = 0;
   out_6574839878510731598[386] = 0;
   out_6574839878510731598[387] = 0;
   out_6574839878510731598[388] = 0;
   out_6574839878510731598[389] = 0;
   out_6574839878510731598[390] = 0;
   out_6574839878510731598[391] = 0;
   out_6574839878510731598[392] = 0;
   out_6574839878510731598[393] = 0;
   out_6574839878510731598[394] = 0;
   out_6574839878510731598[395] = 0;
   out_6574839878510731598[396] = 1;
   out_6574839878510731598[397] = 0;
   out_6574839878510731598[398] = 0;
   out_6574839878510731598[399] = 0;
   out_6574839878510731598[400] = 0;
   out_6574839878510731598[401] = 0;
   out_6574839878510731598[402] = 0;
   out_6574839878510731598[403] = 0;
   out_6574839878510731598[404] = 0;
   out_6574839878510731598[405] = 0;
   out_6574839878510731598[406] = 0;
   out_6574839878510731598[407] = 0;
   out_6574839878510731598[408] = 0;
   out_6574839878510731598[409] = 0;
   out_6574839878510731598[410] = 0;
   out_6574839878510731598[411] = 0;
   out_6574839878510731598[412] = 0;
   out_6574839878510731598[413] = 0;
   out_6574839878510731598[414] = 0;
   out_6574839878510731598[415] = 0;
   out_6574839878510731598[416] = 0;
   out_6574839878510731598[417] = 0;
   out_6574839878510731598[418] = 1;
   out_6574839878510731598[419] = 0;
   out_6574839878510731598[420] = 0;
   out_6574839878510731598[421] = 0;
   out_6574839878510731598[422] = 0;
   out_6574839878510731598[423] = 0;
   out_6574839878510731598[424] = 0;
   out_6574839878510731598[425] = 0;
   out_6574839878510731598[426] = 0;
   out_6574839878510731598[427] = 0;
   out_6574839878510731598[428] = 0;
   out_6574839878510731598[429] = 0;
   out_6574839878510731598[430] = 0;
   out_6574839878510731598[431] = 0;
   out_6574839878510731598[432] = 0;
   out_6574839878510731598[433] = 0;
   out_6574839878510731598[434] = 0;
   out_6574839878510731598[435] = 0;
   out_6574839878510731598[436] = 0;
   out_6574839878510731598[437] = 0;
   out_6574839878510731598[438] = 0;
   out_6574839878510731598[439] = 0;
   out_6574839878510731598[440] = 1;
}
void h_4(double *state, double *unused, double *out_46734123172477316) {
   out_46734123172477316[0] = state[10] + state[13];
   out_46734123172477316[1] = state[11] + state[14];
   out_46734123172477316[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_6046760551020171416) {
   out_6046760551020171416[0] = 0;
   out_6046760551020171416[1] = 0;
   out_6046760551020171416[2] = 0;
   out_6046760551020171416[3] = 0;
   out_6046760551020171416[4] = 0;
   out_6046760551020171416[5] = 0;
   out_6046760551020171416[6] = 0;
   out_6046760551020171416[7] = 0;
   out_6046760551020171416[8] = 0;
   out_6046760551020171416[9] = 0;
   out_6046760551020171416[10] = 1;
   out_6046760551020171416[11] = 0;
   out_6046760551020171416[12] = 0;
   out_6046760551020171416[13] = 1;
   out_6046760551020171416[14] = 0;
   out_6046760551020171416[15] = 0;
   out_6046760551020171416[16] = 0;
   out_6046760551020171416[17] = 0;
   out_6046760551020171416[18] = 0;
   out_6046760551020171416[19] = 0;
   out_6046760551020171416[20] = 0;
   out_6046760551020171416[21] = 0;
   out_6046760551020171416[22] = 0;
   out_6046760551020171416[23] = 0;
   out_6046760551020171416[24] = 0;
   out_6046760551020171416[25] = 0;
   out_6046760551020171416[26] = 0;
   out_6046760551020171416[27] = 0;
   out_6046760551020171416[28] = 0;
   out_6046760551020171416[29] = 0;
   out_6046760551020171416[30] = 0;
   out_6046760551020171416[31] = 0;
   out_6046760551020171416[32] = 0;
   out_6046760551020171416[33] = 1;
   out_6046760551020171416[34] = 0;
   out_6046760551020171416[35] = 0;
   out_6046760551020171416[36] = 1;
   out_6046760551020171416[37] = 0;
   out_6046760551020171416[38] = 0;
   out_6046760551020171416[39] = 0;
   out_6046760551020171416[40] = 0;
   out_6046760551020171416[41] = 0;
   out_6046760551020171416[42] = 0;
   out_6046760551020171416[43] = 0;
   out_6046760551020171416[44] = 0;
   out_6046760551020171416[45] = 0;
   out_6046760551020171416[46] = 0;
   out_6046760551020171416[47] = 0;
   out_6046760551020171416[48] = 0;
   out_6046760551020171416[49] = 0;
   out_6046760551020171416[50] = 0;
   out_6046760551020171416[51] = 0;
   out_6046760551020171416[52] = 0;
   out_6046760551020171416[53] = 0;
   out_6046760551020171416[54] = 0;
   out_6046760551020171416[55] = 0;
   out_6046760551020171416[56] = 1;
   out_6046760551020171416[57] = 0;
   out_6046760551020171416[58] = 0;
   out_6046760551020171416[59] = 1;
   out_6046760551020171416[60] = 0;
   out_6046760551020171416[61] = 0;
   out_6046760551020171416[62] = 0;
   out_6046760551020171416[63] = 0;
   out_6046760551020171416[64] = 0;
   out_6046760551020171416[65] = 0;
}
void h_9(double *state, double *unused, double *out_5882536695801919441) {
   out_5882536695801919441[0] = state[10];
   out_5882536695801919441[1] = state[11];
   out_5882536695801919441[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5805570904390580771) {
   out_5805570904390580771[0] = 0;
   out_5805570904390580771[1] = 0;
   out_5805570904390580771[2] = 0;
   out_5805570904390580771[3] = 0;
   out_5805570904390580771[4] = 0;
   out_5805570904390580771[5] = 0;
   out_5805570904390580771[6] = 0;
   out_5805570904390580771[7] = 0;
   out_5805570904390580771[8] = 0;
   out_5805570904390580771[9] = 0;
   out_5805570904390580771[10] = 1;
   out_5805570904390580771[11] = 0;
   out_5805570904390580771[12] = 0;
   out_5805570904390580771[13] = 0;
   out_5805570904390580771[14] = 0;
   out_5805570904390580771[15] = 0;
   out_5805570904390580771[16] = 0;
   out_5805570904390580771[17] = 0;
   out_5805570904390580771[18] = 0;
   out_5805570904390580771[19] = 0;
   out_5805570904390580771[20] = 0;
   out_5805570904390580771[21] = 0;
   out_5805570904390580771[22] = 0;
   out_5805570904390580771[23] = 0;
   out_5805570904390580771[24] = 0;
   out_5805570904390580771[25] = 0;
   out_5805570904390580771[26] = 0;
   out_5805570904390580771[27] = 0;
   out_5805570904390580771[28] = 0;
   out_5805570904390580771[29] = 0;
   out_5805570904390580771[30] = 0;
   out_5805570904390580771[31] = 0;
   out_5805570904390580771[32] = 0;
   out_5805570904390580771[33] = 1;
   out_5805570904390580771[34] = 0;
   out_5805570904390580771[35] = 0;
   out_5805570904390580771[36] = 0;
   out_5805570904390580771[37] = 0;
   out_5805570904390580771[38] = 0;
   out_5805570904390580771[39] = 0;
   out_5805570904390580771[40] = 0;
   out_5805570904390580771[41] = 0;
   out_5805570904390580771[42] = 0;
   out_5805570904390580771[43] = 0;
   out_5805570904390580771[44] = 0;
   out_5805570904390580771[45] = 0;
   out_5805570904390580771[46] = 0;
   out_5805570904390580771[47] = 0;
   out_5805570904390580771[48] = 0;
   out_5805570904390580771[49] = 0;
   out_5805570904390580771[50] = 0;
   out_5805570904390580771[51] = 0;
   out_5805570904390580771[52] = 0;
   out_5805570904390580771[53] = 0;
   out_5805570904390580771[54] = 0;
   out_5805570904390580771[55] = 0;
   out_5805570904390580771[56] = 1;
   out_5805570904390580771[57] = 0;
   out_5805570904390580771[58] = 0;
   out_5805570904390580771[59] = 0;
   out_5805570904390580771[60] = 0;
   out_5805570904390580771[61] = 0;
   out_5805570904390580771[62] = 0;
   out_5805570904390580771[63] = 0;
   out_5805570904390580771[64] = 0;
   out_5805570904390580771[65] = 0;
}
void h_10(double *state, double *unused, double *out_7678443719860928385) {
   out_7678443719860928385[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7678443719860928385[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7678443719860928385[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3496812261001055004) {
   out_3496812261001055004[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3496812261001055004[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3496812261001055004[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3496812261001055004[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3496812261001055004[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3496812261001055004[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3496812261001055004[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3496812261001055004[7] = 0;
   out_3496812261001055004[8] = 0;
   out_3496812261001055004[9] = 0;
   out_3496812261001055004[10] = 0;
   out_3496812261001055004[11] = 0;
   out_3496812261001055004[12] = 0;
   out_3496812261001055004[13] = 0;
   out_3496812261001055004[14] = 0;
   out_3496812261001055004[15] = 0;
   out_3496812261001055004[16] = 1;
   out_3496812261001055004[17] = 0;
   out_3496812261001055004[18] = 0;
   out_3496812261001055004[19] = 1;
   out_3496812261001055004[20] = 0;
   out_3496812261001055004[21] = 0;
   out_3496812261001055004[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3496812261001055004[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3496812261001055004[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3496812261001055004[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3496812261001055004[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3496812261001055004[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3496812261001055004[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3496812261001055004[29] = 0;
   out_3496812261001055004[30] = 0;
   out_3496812261001055004[31] = 0;
   out_3496812261001055004[32] = 0;
   out_3496812261001055004[33] = 0;
   out_3496812261001055004[34] = 0;
   out_3496812261001055004[35] = 0;
   out_3496812261001055004[36] = 0;
   out_3496812261001055004[37] = 0;
   out_3496812261001055004[38] = 0;
   out_3496812261001055004[39] = 1;
   out_3496812261001055004[40] = 0;
   out_3496812261001055004[41] = 0;
   out_3496812261001055004[42] = 1;
   out_3496812261001055004[43] = 0;
   out_3496812261001055004[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3496812261001055004[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3496812261001055004[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3496812261001055004[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3496812261001055004[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3496812261001055004[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3496812261001055004[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3496812261001055004[51] = 0;
   out_3496812261001055004[52] = 0;
   out_3496812261001055004[53] = 0;
   out_3496812261001055004[54] = 0;
   out_3496812261001055004[55] = 0;
   out_3496812261001055004[56] = 0;
   out_3496812261001055004[57] = 0;
   out_3496812261001055004[58] = 0;
   out_3496812261001055004[59] = 0;
   out_3496812261001055004[60] = 0;
   out_3496812261001055004[61] = 0;
   out_3496812261001055004[62] = 1;
   out_3496812261001055004[63] = 0;
   out_3496812261001055004[64] = 0;
   out_3496812261001055004[65] = 1;
}
void h_12(double *state, double *unused, double *out_8201116885482423398) {
   out_8201116885482423398[0] = state[0];
   out_8201116885482423398[1] = state[1];
   out_8201116885482423398[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5425661525972577749) {
   out_5425661525972577749[0] = 1;
   out_5425661525972577749[1] = 0;
   out_5425661525972577749[2] = 0;
   out_5425661525972577749[3] = 0;
   out_5425661525972577749[4] = 0;
   out_5425661525972577749[5] = 0;
   out_5425661525972577749[6] = 0;
   out_5425661525972577749[7] = 0;
   out_5425661525972577749[8] = 0;
   out_5425661525972577749[9] = 0;
   out_5425661525972577749[10] = 0;
   out_5425661525972577749[11] = 0;
   out_5425661525972577749[12] = 0;
   out_5425661525972577749[13] = 0;
   out_5425661525972577749[14] = 0;
   out_5425661525972577749[15] = 0;
   out_5425661525972577749[16] = 0;
   out_5425661525972577749[17] = 0;
   out_5425661525972577749[18] = 0;
   out_5425661525972577749[19] = 0;
   out_5425661525972577749[20] = 0;
   out_5425661525972577749[21] = 0;
   out_5425661525972577749[22] = 0;
   out_5425661525972577749[23] = 1;
   out_5425661525972577749[24] = 0;
   out_5425661525972577749[25] = 0;
   out_5425661525972577749[26] = 0;
   out_5425661525972577749[27] = 0;
   out_5425661525972577749[28] = 0;
   out_5425661525972577749[29] = 0;
   out_5425661525972577749[30] = 0;
   out_5425661525972577749[31] = 0;
   out_5425661525972577749[32] = 0;
   out_5425661525972577749[33] = 0;
   out_5425661525972577749[34] = 0;
   out_5425661525972577749[35] = 0;
   out_5425661525972577749[36] = 0;
   out_5425661525972577749[37] = 0;
   out_5425661525972577749[38] = 0;
   out_5425661525972577749[39] = 0;
   out_5425661525972577749[40] = 0;
   out_5425661525972577749[41] = 0;
   out_5425661525972577749[42] = 0;
   out_5425661525972577749[43] = 0;
   out_5425661525972577749[44] = 0;
   out_5425661525972577749[45] = 0;
   out_5425661525972577749[46] = 1;
   out_5425661525972577749[47] = 0;
   out_5425661525972577749[48] = 0;
   out_5425661525972577749[49] = 0;
   out_5425661525972577749[50] = 0;
   out_5425661525972577749[51] = 0;
   out_5425661525972577749[52] = 0;
   out_5425661525972577749[53] = 0;
   out_5425661525972577749[54] = 0;
   out_5425661525972577749[55] = 0;
   out_5425661525972577749[56] = 0;
   out_5425661525972577749[57] = 0;
   out_5425661525972577749[58] = 0;
   out_5425661525972577749[59] = 0;
   out_5425661525972577749[60] = 0;
   out_5425661525972577749[61] = 0;
   out_5425661525972577749[62] = 0;
   out_5425661525972577749[63] = 0;
   out_5425661525972577749[64] = 0;
   out_5425661525972577749[65] = 0;
}
void h_31(double *state, double *unused, double *out_7878955341665566813) {
   out_7878955341665566813[0] = state[7];
   out_7878955341665566813[1] = state[8];
   out_7878955341665566813[2] = state[9];
}
void H_31(double *state, double *unused, double *out_2680098493647564040) {
   out_2680098493647564040[0] = 0;
   out_2680098493647564040[1] = 0;
   out_2680098493647564040[2] = 0;
   out_2680098493647564040[3] = 0;
   out_2680098493647564040[4] = 0;
   out_2680098493647564040[5] = 0;
   out_2680098493647564040[6] = 0;
   out_2680098493647564040[7] = 1;
   out_2680098493647564040[8] = 0;
   out_2680098493647564040[9] = 0;
   out_2680098493647564040[10] = 0;
   out_2680098493647564040[11] = 0;
   out_2680098493647564040[12] = 0;
   out_2680098493647564040[13] = 0;
   out_2680098493647564040[14] = 0;
   out_2680098493647564040[15] = 0;
   out_2680098493647564040[16] = 0;
   out_2680098493647564040[17] = 0;
   out_2680098493647564040[18] = 0;
   out_2680098493647564040[19] = 0;
   out_2680098493647564040[20] = 0;
   out_2680098493647564040[21] = 0;
   out_2680098493647564040[22] = 0;
   out_2680098493647564040[23] = 0;
   out_2680098493647564040[24] = 0;
   out_2680098493647564040[25] = 0;
   out_2680098493647564040[26] = 0;
   out_2680098493647564040[27] = 0;
   out_2680098493647564040[28] = 0;
   out_2680098493647564040[29] = 0;
   out_2680098493647564040[30] = 1;
   out_2680098493647564040[31] = 0;
   out_2680098493647564040[32] = 0;
   out_2680098493647564040[33] = 0;
   out_2680098493647564040[34] = 0;
   out_2680098493647564040[35] = 0;
   out_2680098493647564040[36] = 0;
   out_2680098493647564040[37] = 0;
   out_2680098493647564040[38] = 0;
   out_2680098493647564040[39] = 0;
   out_2680098493647564040[40] = 0;
   out_2680098493647564040[41] = 0;
   out_2680098493647564040[42] = 0;
   out_2680098493647564040[43] = 0;
   out_2680098493647564040[44] = 0;
   out_2680098493647564040[45] = 0;
   out_2680098493647564040[46] = 0;
   out_2680098493647564040[47] = 0;
   out_2680098493647564040[48] = 0;
   out_2680098493647564040[49] = 0;
   out_2680098493647564040[50] = 0;
   out_2680098493647564040[51] = 0;
   out_2680098493647564040[52] = 0;
   out_2680098493647564040[53] = 1;
   out_2680098493647564040[54] = 0;
   out_2680098493647564040[55] = 0;
   out_2680098493647564040[56] = 0;
   out_2680098493647564040[57] = 0;
   out_2680098493647564040[58] = 0;
   out_2680098493647564040[59] = 0;
   out_2680098493647564040[60] = 0;
   out_2680098493647564040[61] = 0;
   out_2680098493647564040[62] = 0;
   out_2680098493647564040[63] = 0;
   out_2680098493647564040[64] = 0;
   out_2680098493647564040[65] = 0;
}
void h_32(double *state, double *unused, double *out_5649373630232964442) {
   out_5649373630232964442[0] = state[3];
   out_5649373630232964442[1] = state[4];
   out_5649373630232964442[2] = state[5];
   out_5649373630232964442[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8851781076367871220) {
   out_8851781076367871220[0] = 0;
   out_8851781076367871220[1] = 0;
   out_8851781076367871220[2] = 0;
   out_8851781076367871220[3] = 1;
   out_8851781076367871220[4] = 0;
   out_8851781076367871220[5] = 0;
   out_8851781076367871220[6] = 0;
   out_8851781076367871220[7] = 0;
   out_8851781076367871220[8] = 0;
   out_8851781076367871220[9] = 0;
   out_8851781076367871220[10] = 0;
   out_8851781076367871220[11] = 0;
   out_8851781076367871220[12] = 0;
   out_8851781076367871220[13] = 0;
   out_8851781076367871220[14] = 0;
   out_8851781076367871220[15] = 0;
   out_8851781076367871220[16] = 0;
   out_8851781076367871220[17] = 0;
   out_8851781076367871220[18] = 0;
   out_8851781076367871220[19] = 0;
   out_8851781076367871220[20] = 0;
   out_8851781076367871220[21] = 0;
   out_8851781076367871220[22] = 0;
   out_8851781076367871220[23] = 0;
   out_8851781076367871220[24] = 0;
   out_8851781076367871220[25] = 0;
   out_8851781076367871220[26] = 1;
   out_8851781076367871220[27] = 0;
   out_8851781076367871220[28] = 0;
   out_8851781076367871220[29] = 0;
   out_8851781076367871220[30] = 0;
   out_8851781076367871220[31] = 0;
   out_8851781076367871220[32] = 0;
   out_8851781076367871220[33] = 0;
   out_8851781076367871220[34] = 0;
   out_8851781076367871220[35] = 0;
   out_8851781076367871220[36] = 0;
   out_8851781076367871220[37] = 0;
   out_8851781076367871220[38] = 0;
   out_8851781076367871220[39] = 0;
   out_8851781076367871220[40] = 0;
   out_8851781076367871220[41] = 0;
   out_8851781076367871220[42] = 0;
   out_8851781076367871220[43] = 0;
   out_8851781076367871220[44] = 0;
   out_8851781076367871220[45] = 0;
   out_8851781076367871220[46] = 0;
   out_8851781076367871220[47] = 0;
   out_8851781076367871220[48] = 0;
   out_8851781076367871220[49] = 1;
   out_8851781076367871220[50] = 0;
   out_8851781076367871220[51] = 0;
   out_8851781076367871220[52] = 0;
   out_8851781076367871220[53] = 0;
   out_8851781076367871220[54] = 0;
   out_8851781076367871220[55] = 0;
   out_8851781076367871220[56] = 0;
   out_8851781076367871220[57] = 0;
   out_8851781076367871220[58] = 0;
   out_8851781076367871220[59] = 0;
   out_8851781076367871220[60] = 0;
   out_8851781076367871220[61] = 0;
   out_8851781076367871220[62] = 0;
   out_8851781076367871220[63] = 0;
   out_8851781076367871220[64] = 0;
   out_8851781076367871220[65] = 0;
   out_8851781076367871220[66] = 0;
   out_8851781076367871220[67] = 0;
   out_8851781076367871220[68] = 0;
   out_8851781076367871220[69] = 0;
   out_8851781076367871220[70] = 0;
   out_8851781076367871220[71] = 0;
   out_8851781076367871220[72] = 1;
   out_8851781076367871220[73] = 0;
   out_8851781076367871220[74] = 0;
   out_8851781076367871220[75] = 0;
   out_8851781076367871220[76] = 0;
   out_8851781076367871220[77] = 0;
   out_8851781076367871220[78] = 0;
   out_8851781076367871220[79] = 0;
   out_8851781076367871220[80] = 0;
   out_8851781076367871220[81] = 0;
   out_8851781076367871220[82] = 0;
   out_8851781076367871220[83] = 0;
   out_8851781076367871220[84] = 0;
   out_8851781076367871220[85] = 0;
   out_8851781076367871220[86] = 0;
   out_8851781076367871220[87] = 0;
}
void h_13(double *state, double *unused, double *out_7995445054210101818) {
   out_7995445054210101818[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7995445054210101818[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7995445054210101818[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8147765269172936844) {
   out_8147765269172936844[0] = 0;
   out_8147765269172936844[1] = 0;
   out_8147765269172936844[2] = 0;
   out_8147765269172936844[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8147765269172936844[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8147765269172936844[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8147765269172936844[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8147765269172936844[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8147765269172936844[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8147765269172936844[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8147765269172936844[10] = 0;
   out_8147765269172936844[11] = 0;
   out_8147765269172936844[12] = 0;
   out_8147765269172936844[13] = 0;
   out_8147765269172936844[14] = 0;
   out_8147765269172936844[15] = 0;
   out_8147765269172936844[16] = 0;
   out_8147765269172936844[17] = 0;
   out_8147765269172936844[18] = 0;
   out_8147765269172936844[19] = 0;
   out_8147765269172936844[20] = 0;
   out_8147765269172936844[21] = 0;
   out_8147765269172936844[22] = 0;
   out_8147765269172936844[23] = 0;
   out_8147765269172936844[24] = 0;
   out_8147765269172936844[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8147765269172936844[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8147765269172936844[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8147765269172936844[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8147765269172936844[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8147765269172936844[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8147765269172936844[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8147765269172936844[32] = 0;
   out_8147765269172936844[33] = 0;
   out_8147765269172936844[34] = 0;
   out_8147765269172936844[35] = 0;
   out_8147765269172936844[36] = 0;
   out_8147765269172936844[37] = 0;
   out_8147765269172936844[38] = 0;
   out_8147765269172936844[39] = 0;
   out_8147765269172936844[40] = 0;
   out_8147765269172936844[41] = 0;
   out_8147765269172936844[42] = 0;
   out_8147765269172936844[43] = 0;
   out_8147765269172936844[44] = 0;
   out_8147765269172936844[45] = 0;
   out_8147765269172936844[46] = 0;
   out_8147765269172936844[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8147765269172936844[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8147765269172936844[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8147765269172936844[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8147765269172936844[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8147765269172936844[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8147765269172936844[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8147765269172936844[54] = 0;
   out_8147765269172936844[55] = 0;
   out_8147765269172936844[56] = 0;
   out_8147765269172936844[57] = 0;
   out_8147765269172936844[58] = 0;
   out_8147765269172936844[59] = 0;
   out_8147765269172936844[60] = 0;
   out_8147765269172936844[61] = 0;
   out_8147765269172936844[62] = 0;
   out_8147765269172936844[63] = 0;
   out_8147765269172936844[64] = 0;
   out_8147765269172936844[65] = 0;
}
void h_14(double *state, double *unused, double *out_5882536695801919441) {
   out_5882536695801919441[0] = state[10];
   out_5882536695801919441[1] = state[11];
   out_5882536695801919441[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5805570904390580771) {
   out_5805570904390580771[0] = 0;
   out_5805570904390580771[1] = 0;
   out_5805570904390580771[2] = 0;
   out_5805570904390580771[3] = 0;
   out_5805570904390580771[4] = 0;
   out_5805570904390580771[5] = 0;
   out_5805570904390580771[6] = 0;
   out_5805570904390580771[7] = 0;
   out_5805570904390580771[8] = 0;
   out_5805570904390580771[9] = 0;
   out_5805570904390580771[10] = 1;
   out_5805570904390580771[11] = 0;
   out_5805570904390580771[12] = 0;
   out_5805570904390580771[13] = 0;
   out_5805570904390580771[14] = 0;
   out_5805570904390580771[15] = 0;
   out_5805570904390580771[16] = 0;
   out_5805570904390580771[17] = 0;
   out_5805570904390580771[18] = 0;
   out_5805570904390580771[19] = 0;
   out_5805570904390580771[20] = 0;
   out_5805570904390580771[21] = 0;
   out_5805570904390580771[22] = 0;
   out_5805570904390580771[23] = 0;
   out_5805570904390580771[24] = 0;
   out_5805570904390580771[25] = 0;
   out_5805570904390580771[26] = 0;
   out_5805570904390580771[27] = 0;
   out_5805570904390580771[28] = 0;
   out_5805570904390580771[29] = 0;
   out_5805570904390580771[30] = 0;
   out_5805570904390580771[31] = 0;
   out_5805570904390580771[32] = 0;
   out_5805570904390580771[33] = 1;
   out_5805570904390580771[34] = 0;
   out_5805570904390580771[35] = 0;
   out_5805570904390580771[36] = 0;
   out_5805570904390580771[37] = 0;
   out_5805570904390580771[38] = 0;
   out_5805570904390580771[39] = 0;
   out_5805570904390580771[40] = 0;
   out_5805570904390580771[41] = 0;
   out_5805570904390580771[42] = 0;
   out_5805570904390580771[43] = 0;
   out_5805570904390580771[44] = 0;
   out_5805570904390580771[45] = 0;
   out_5805570904390580771[46] = 0;
   out_5805570904390580771[47] = 0;
   out_5805570904390580771[48] = 0;
   out_5805570904390580771[49] = 0;
   out_5805570904390580771[50] = 0;
   out_5805570904390580771[51] = 0;
   out_5805570904390580771[52] = 0;
   out_5805570904390580771[53] = 0;
   out_5805570904390580771[54] = 0;
   out_5805570904390580771[55] = 0;
   out_5805570904390580771[56] = 1;
   out_5805570904390580771[57] = 0;
   out_5805570904390580771[58] = 0;
   out_5805570904390580771[59] = 0;
   out_5805570904390580771[60] = 0;
   out_5805570904390580771[61] = 0;
   out_5805570904390580771[62] = 0;
   out_5805570904390580771[63] = 0;
   out_5805570904390580771[64] = 0;
   out_5805570904390580771[65] = 0;
}
void h_33(double *state, double *unused, double *out_5090531450441938564) {
   out_5090531450441938564[0] = state[16];
   out_5090531450441938564[1] = state[17];
   out_5090531450441938564[2] = state[18];
}
void H_33(double *state, double *unused, double *out_470458510991293564) {
   out_470458510991293564[0] = 0;
   out_470458510991293564[1] = 0;
   out_470458510991293564[2] = 0;
   out_470458510991293564[3] = 0;
   out_470458510991293564[4] = 0;
   out_470458510991293564[5] = 0;
   out_470458510991293564[6] = 0;
   out_470458510991293564[7] = 0;
   out_470458510991293564[8] = 0;
   out_470458510991293564[9] = 0;
   out_470458510991293564[10] = 0;
   out_470458510991293564[11] = 0;
   out_470458510991293564[12] = 0;
   out_470458510991293564[13] = 0;
   out_470458510991293564[14] = 0;
   out_470458510991293564[15] = 0;
   out_470458510991293564[16] = 1;
   out_470458510991293564[17] = 0;
   out_470458510991293564[18] = 0;
   out_470458510991293564[19] = 0;
   out_470458510991293564[20] = 0;
   out_470458510991293564[21] = 0;
   out_470458510991293564[22] = 0;
   out_470458510991293564[23] = 0;
   out_470458510991293564[24] = 0;
   out_470458510991293564[25] = 0;
   out_470458510991293564[26] = 0;
   out_470458510991293564[27] = 0;
   out_470458510991293564[28] = 0;
   out_470458510991293564[29] = 0;
   out_470458510991293564[30] = 0;
   out_470458510991293564[31] = 0;
   out_470458510991293564[32] = 0;
   out_470458510991293564[33] = 0;
   out_470458510991293564[34] = 0;
   out_470458510991293564[35] = 0;
   out_470458510991293564[36] = 0;
   out_470458510991293564[37] = 0;
   out_470458510991293564[38] = 0;
   out_470458510991293564[39] = 1;
   out_470458510991293564[40] = 0;
   out_470458510991293564[41] = 0;
   out_470458510991293564[42] = 0;
   out_470458510991293564[43] = 0;
   out_470458510991293564[44] = 0;
   out_470458510991293564[45] = 0;
   out_470458510991293564[46] = 0;
   out_470458510991293564[47] = 0;
   out_470458510991293564[48] = 0;
   out_470458510991293564[49] = 0;
   out_470458510991293564[50] = 0;
   out_470458510991293564[51] = 0;
   out_470458510991293564[52] = 0;
   out_470458510991293564[53] = 0;
   out_470458510991293564[54] = 0;
   out_470458510991293564[55] = 0;
   out_470458510991293564[56] = 0;
   out_470458510991293564[57] = 0;
   out_470458510991293564[58] = 0;
   out_470458510991293564[59] = 0;
   out_470458510991293564[60] = 0;
   out_470458510991293564[61] = 0;
   out_470458510991293564[62] = 1;
   out_470458510991293564[63] = 0;
   out_470458510991293564[64] = 0;
   out_470458510991293564[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2620553608384758536) {
  H(in_vec, out_2620553608384758536);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_1692580191345920575) {
  err_fun(nom_x, delta_x, out_1692580191345920575);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2846535014035290138) {
  inv_err_fun(nom_x, true_x, out_2846535014035290138);
}
void live_H_mod_fun(double *state, double *out_1037182408429431877) {
  H_mod_fun(state, out_1037182408429431877);
}
void live_f_fun(double *state, double dt, double *out_2137560961494755797) {
  f_fun(state,  dt, out_2137560961494755797);
}
void live_F_fun(double *state, double dt, double *out_6574839878510731598) {
  F_fun(state,  dt, out_6574839878510731598);
}
void live_h_4(double *state, double *unused, double *out_46734123172477316) {
  h_4(state, unused, out_46734123172477316);
}
void live_H_4(double *state, double *unused, double *out_6046760551020171416) {
  H_4(state, unused, out_6046760551020171416);
}
void live_h_9(double *state, double *unused, double *out_5882536695801919441) {
  h_9(state, unused, out_5882536695801919441);
}
void live_H_9(double *state, double *unused, double *out_5805570904390580771) {
  H_9(state, unused, out_5805570904390580771);
}
void live_h_10(double *state, double *unused, double *out_7678443719860928385) {
  h_10(state, unused, out_7678443719860928385);
}
void live_H_10(double *state, double *unused, double *out_3496812261001055004) {
  H_10(state, unused, out_3496812261001055004);
}
void live_h_12(double *state, double *unused, double *out_8201116885482423398) {
  h_12(state, unused, out_8201116885482423398);
}
void live_H_12(double *state, double *unused, double *out_5425661525972577749) {
  H_12(state, unused, out_5425661525972577749);
}
void live_h_31(double *state, double *unused, double *out_7878955341665566813) {
  h_31(state, unused, out_7878955341665566813);
}
void live_H_31(double *state, double *unused, double *out_2680098493647564040) {
  H_31(state, unused, out_2680098493647564040);
}
void live_h_32(double *state, double *unused, double *out_5649373630232964442) {
  h_32(state, unused, out_5649373630232964442);
}
void live_H_32(double *state, double *unused, double *out_8851781076367871220) {
  H_32(state, unused, out_8851781076367871220);
}
void live_h_13(double *state, double *unused, double *out_7995445054210101818) {
  h_13(state, unused, out_7995445054210101818);
}
void live_H_13(double *state, double *unused, double *out_8147765269172936844) {
  H_13(state, unused, out_8147765269172936844);
}
void live_h_14(double *state, double *unused, double *out_5882536695801919441) {
  h_14(state, unused, out_5882536695801919441);
}
void live_H_14(double *state, double *unused, double *out_5805570904390580771) {
  H_14(state, unused, out_5805570904390580771);
}
void live_h_33(double *state, double *unused, double *out_5090531450441938564) {
  h_33(state, unused, out_5090531450441938564);
}
void live_H_33(double *state, double *unused, double *out_470458510991293564) {
  H_33(state, unused, out_470458510991293564);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
